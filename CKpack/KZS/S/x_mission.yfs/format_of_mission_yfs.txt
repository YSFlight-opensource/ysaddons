sorry, this document is "draft".
This document was written targeting "YS Flight Simulation System 2000 V20021205B or later".
written by Kzs on 2003/10/25.
fixed & corrected by Kzs on 2004/12/13.


○ ミッションファイル(.yfs)の書式



※ 一応、大きな間違いは無い(誤字脱字は除く)と思いますが、推測によって書かれてい
   る部分が多く含まれていると言う事を、予めご了承くださいませm(_ _)m。
   
※ このテキストは、主にYS 021205Bバージョンを対象に作成･内容確認しています。
   YS 030712(又はそれ以降の)バージョンでも通用するはずですが、YS 021205Bでは問
   題なく使える(実行できる)ミッションでも、YS 030712バージョンではCOM機の挙動が
   異なるとか、滑走路から上手く離陸してくれない等、幾つか不具合が出る場合が有り
   ます。



1) ミッションファイルの構造
    基本的に、「Save Flight」で保存される.yfsファイルと同じ構造をしています。
    一番の違いは、フライトレコードの場合には、プレイヤー機･敵機･動く地上物(空母/
    SAM/AAA等)のフレームデータが含まれると言う事位でしょうか。
    
    大雑把に分類すると、.yfsファイルの中身は
    
        [マップ指定部分    ]
        [機体指定部分      ]
        [地上物指定部分    ]
        [天候データ指定部分]
    
    と言った感じになります。
    「機体指定部分」と「地上物指定部分」は、さらに、
    
        [機体指定部分
            [機体指定1  ]
            [機体指定2  ]
            [機体指定3  ]
                 ･
                 ･
                 ･
        ]
        
        [地上物指定部分
            [地上物指定1]
            [地上物指定2]
            [地上物指定3]
                 ･
                 ･
                 ･
        ]
    
    と、必要な数だけ、機体/地上物の指定データが繰り返す構造をとります。
    
    次項以降に、各部分別に書式を記述します。
    ※ 基本的に、記述する内容(行)は、「キーワード パラメータ1 パラメータ2 ･･･」
       という形式になります。
       パラメータの指定部分は筆者の都合上、{･･･}とか[･･･]の様に括弧で括って記述
       していますが、実際に.yfsファイルを作成する時には、括弧は付けないで記述し
       てください。
    ※ ファイル中の空行は無視されます。(あってもなくても良い)
    ※ 一つのデータブロック(1機分の機体指定データや1個分のオブジェクト指定データ)
       内では、「INTENTIO〜ENDINTEN」の様に明示的に括らなくてはいけない物を除い
       て、順不同です。(データブロックの先頭として識別される行は当然違いますが)(^^)




2) マップ指定部分
    シミュレーション実行時に使用するシーナリ(マップ)の指定を行ないます。
    
FIELDNAM {scenary_name} {offset_xyz} 0 0 0 [flag]

    scenary_name : シーナリ名。「Create New Flight」の時などに、リストボックス
                   に表示されるシーナリの名前を記述します。
    offset_xyz   : シーナリを読み込む時の配置オフセットを、xyzの三次元座標で指
                   定します。数値の単位はm(メートル)です。
                   マップの原点を平行移動させたい場合に使用します。
                   通常(平行移動の必要が無い時)は「0 0 0」と記述します。
                   このパラメータの後に続く「0 0 0」と言う部分は、多分マップの
                   回転の角度指定(yaw/pitch/roll)だと思うのですが、私が試した限
                   りでは何を指定しても変化がありませんでした(T_T)。
    flag         : シーナリの初期設定オブジェクトをどうするか･と言う指定です。
                   TRUEを指定すると初期設定オブジェクトを配置、FALSEだと無視さ
                   れます。
    
    このFIELDNAM指定は、複数記述する事ができ、マップの合成が可能になっています。
    通常、一番目のマップを基準とし、二番目以降のマップのoffset_xyzに適当な
    値を設定してマップが重ならないようにします。
    ※ ミッションデータを読み込んだ後の「choose start pos」で選択可能なスタート
       位置は、一番目に指定されているマップのスタート位置に限られます。
    
    例) 「SMALL_MAP」と「ISLAND_GUARD」を合成する場合
    
FIELDNAM SMALL_MAP 0 0 0 0 0 0 TRUE
FIELDNAM ISLAND_GUARD -10000 0 -30000 0 0 0 TRUE
    
    この例だと、「ISLAND_GUARD」マップの原点を「西方へ10km、南方へ30km」ずらし
    て、「SMALL_MAP」に重ねています。



3) AAMの使用許可の指定
    シミュレーション実行時にAAM使用の許可/禁止の指定です。
    
ALLOWAAM {flag}

    flag : TRUEで許可、FALSEで禁止です。これはプレイヤー機/COM機全てに適用され
           ます。通常、マップ指定の後に記述します。



4) 機体指定部分
    機体指定部分はちょっと複雑です。おおむね、以下の様な構成になります。
    
        [使用する機体の指定      ]
        [スタート位置の指定      ]
        [IFFの指定               ]
        [武装他の初期値変更の指定]
        [COM機の動作の指定       ]
        [攻撃対象指定            ]
    
    これだけの指定が一塊となって、一機分のデータブロックになります。
    プレイヤー機の他にCOM機を複数登場させたい場合は、このデータブロックを必要な
    数だけ繰り返して記述する事になります。
    
    4.1) 使用する機体の指定
        使用する機体を指定します。
        機体指定データブロックの先頭行として識別されます。
        
AIRPLANE {airplane_name} {flag}
        
        airplane_name : 機体の名前。機体選択画面で表示される名前を記述します。
                        機体名は、機体の.datファイルに記述されている物をコピー
                        すれば良いのですが、機体名にスペース( )が含まれている場
                        合は、名前全体をダブルコーテイション("")で括るか、スペー
                        スをアンダーバー(_)に置き換えるかしなくてはいけません。
        flag          : プレイヤー機か、COM機かの指定です。
                        TRUEでプレイヤー機、FALSEでCOM機です。
                        TRUEを指定した機体を複数記述すると、一番最後の物がプレ
                        イヤー機となります。
    
    4.2) スタート位置の指定
        機体の発進位置を指定します。
        
        4.2.1) 設定済のスタート位置からの発進
            いわゆる.stpファイルで定義されているスタート位置を指定する場合。
            
STARTPOS {map_#} {position_name}
            
            map_#         : どのマップの.stpのスタート位置かを指定します。
                            2)のマップ指定で指定した順に、0,1,2･･･となります。
            position_name : .stpファイルに記述されているスタート位置の名前を記
                            述します。
        
        4.2.2) 任意の位置からの発進
            .stpファイルに定義されていない位置から機体を発進させます。
            
AIRPCMND POSITION {xyz}
AIRPCMND ATTITUDE {yaw_pitch_roll}
AIRPCMND INITSPED {speed}
AIRPCMND CTLTHROT {throttle}
AIRPCMND CTLLDGEA {flag}
            
            xyz            : 発進位置座標。xyzの各軸の座標を指定します。
                             東15km、北20km、高度10000ftからスタートさせるには、
                             「15000.0m 10000.0ft 20000.0m」と記述します。
                             着陸可能な地点であれば、地上からのスタートも指定出
                             来ます。
            yaw_pitch_roll : 発進時の機体の姿勢を指定します。
                             yaw角、pitch角、roll角の順に指定します。
                             南西向きにスタートさせるには、
                             「135.0deg 0.0deg 0.0deg」という感じになります。
            speed          : 初期速度の指定です。「0.4MACH」「320km/h」などと記
                             述します。
            throttle       : スタート時のスロットル開度を指定します。
                             「0.8」なら80%、「1.0」なら100%です。
            flag           : 着陸装置の状態を指定します。
                             TRUEでgear down、FALSEでgear upです。
        
    4.3) IFFの指定
        機体のIFFを指定します。
        
IDENTIFY {iff}
        
        iff : 0〜3の範囲で記述します。
        
    4.4) 武装他の初期値変更の指定
        搭載兵器の変更や機体の飛行特性を決める設定値の変更を指定します。
        通常、搭載兵器の変更くらいしか使用しませんが、機銃を装備していない機体
        に機銃を付けたり、エンジン推力を変更したりする事が出来ます。
        4.2.2)で任意の位置からのスタートを指定する方法を書きましたが、実は、
        これも機体の設定データを変更していたのです。
        (「.stpファイルに存在しないスタート位置が指定された･または･スタート位置が
         指定されていない」場合に使用される、スタート位置初期値を変更していたのです)
        
        ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※
        ※ YS 20040914バージョン以降でサポートされたマルチスロット(同一の兵装取
        ※ 付位置に複数種類の兵器を搭載可能にする設定･･･dat内では HRDPOINT指定)
        ※ 形式の機体の場合、搭載兵器の変更には若干の小細工が必要となる場合があ
        ※ ります。
        ※ 
        ※ 「HRDPOINT」 仕様を使用している機体では、装備数の上限は
        ※      「その種類の兵器を搭載可能な(空いている)位置」
        ※ があるかどうかで、装備可能か否かが分かれます。
        ※ また、空き位置があったとしても
        ※      「LMTBYHDP TRUE」
        ※ になっている場合(大抵そうなっている)、装備可能な数だけしか有効になり
        ※ ません。
        ※ このフラグをFALSEに指定してから装備数を指示すればMAX〜で指定されてい
        ※ るリミットを超える数も指定可能ですが、その指示を解釈する時点で(その
        ※ 種類の兵器の装備位置の)空きスロットが一つも無い場合は、やはり装備で
        ※ きない事になります。
        ※ 増やしたい兵器のみ数を指定して･･･とやると、初期状態で他の種類の兵器
        ※ で位置が全部使用中になっている機体では、追加装備させてやる事ができま
        ※ せん。
        ※ また、旧形式の機体の場合でも、「〜SLOT」指定に存在しない種類の兵器は
        ※ そのままでは装備できません。
        ※ 
        ※  ◎ 「HRDPOINT」仕様の機体で規定値以上の装備数･元々装備可能でない装備を追加する方法の一例
        ※      ･「LMTBYHDP FALSE」を指示(位置上限数を超えさせたい場合のみ)
        ※      ･元々装備不可な兵装を追加するには「HRDPOINT」または「〜SLOT」で
        ※       装備位置を一カ所(または必要数)作成
        ※      ･不要な兵装の数を 0 に。(無駄なものは除去w残しておいても他の兵器の空き位置が最低一個ずつ残るのであれば放置で可)
        ※      ･必要な兵装の数を全て 1 に。(兵器毎に位置を確保しておく為･･･理屈が分かっているならこの部分は省略で可)
        ※      ･その後、改めて装備数を再指示。
        ※  ◎ 「HRDPOINT」仕様の機体で規定値以内で納まる場合の例
        ※      ･初期状態で目的の兵器の装備数が 0 の場合で、他の兵器と位置を共有しているものは、
        ※       共有相手の装備数をまず減らしてから指示する。
        ※  ◎ 「HRDPOINT」仕様じゃない機体の場合の例
        ※      ･元々装備不可な兵装を追加するには「〜SLOT」で装備位置を一カ所作成
        ※      ･装備数を指示。
        ※      (旧形式の場合は暗黙に「LMTBYHDP FALSE」と扱われるようです)
        ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※
        
AIRPCMND {key_word} <parametars>
        
        key_word   : 機体の.datファイル中で使われているキーワード。
        parametars : そのキーワードに対するパラメータ。
        
        機体の.datファイルに記述されているほとんど全て(機体名称等は除く)の設定
        値が、この書式で変更できます。
        (全部は試していませんが、変更出来ない物も在るかも知れません^^)
        ただ、あまり極端な値を指定すると、まともに飛行できなくなる場合が有りま
        すので、注意が必要です。
        
        例) エンジン推力を変更する場合(^^)
AIRPCMND THRMILIT 50.0t
             この指定を追加しておくと、その機体のバーナー無し時の最大推力が50.0t
             に変更されます。
             
        例) ロールのしやすさを変更する場合(^^)
AIRPCMND CROLLMAN 10.0
             この指定を追加しておくと、その機体のロールしやすさが変更されます。
             通常戦闘機で3.0位が普通ですが、かなりロール制御が不安定になります。
        
        ※ エンジン推力やCruising condition、Landing condition等、加速性能に関
           わる設定を変更した場合、最後に
AIRPCMND AUTOCALC
           を追加しないと、変更値が反映されません。矛盾が生じるような無理な設定
           値を指定した場合は、YS起動時のチェックと同様、warnningメッセージが出
           ます。
        
    4.5) COM機の動作の指定
        COM機の動作(空戦･編隊･上空待機等)の指定･設定を記述します。
        プレイヤー機の場合は、この部分は通常"無し"です(記述しない)。
        プレイヤー機にこの指定を付けると、スタート時に自動操縦(AUTO)になります。
        (空戦モードで自動操縦スタートだと、ちゃんと自動で戦います･･･BSキーでAUTO
        解除すれば自分で操縦できます･･･ただ、一度解除してしまうと、auto pilotの
        種別に戦闘や対地攻撃といった選択肢は無いので、スタート時の"空戦モードで
        auto pilot"に戻す事は出来ません(^^)。
        
INTENTIO
MINIALTI {height}
{type} <parameter>
ENDINTEN
        
        height    : 地面との衝突回避を行う時の限界高度を指定します。
                    小さな値を指定すると、より低空でも機動を行なうようになります。
                    単位はm(メートル)です。
                    ※ YS 021205Bバージョン以降では、COM機のAI処理が変わった為、
                       この値はほとんど意味をなさなくなってしまったようです。
                       適当に 1000 とか書いておけば良いと思います。
        type      : 動作種別。以下の何れかを指定します。
                        空戦 : DOGFIGHT
                        攻撃 : GNDATACK
                        編隊 : FORMATIO
                        待機 : GOTOPOSI
                        着陸 : LANDING_
                        演舞 : AIRSHOW_
                        *無* : NOTHING_
        parameter : type毎にパラメータの書式が異なります。
                        空戦 : {g_val} {b_val}
                               g_val : 耐G限界
                               b_val : 耐ブラックアウト限界
                               この二つの意味に関しては、チャーシューさんのHPを
                               参照してください(^^)。(書き写すのもアレなんで･･･)
                               よく使う値としては、
                                   novice  : G3.0 B20.0
                                   veteran : G5.0 B20.0
                                   ace     : G7.0 B20.0
                                   deadly  : G9.0 B20.0
                                   lethal  : G11.0 B20.0
                               等でしょう。数値が大きいほど、強く(強引に?)なり
                               ます。
                        攻撃 : 無し
                        編隊 : {airplane_#} {offset_xyz}
                               airplane_# : 編隊長機の指定。
                                            記述された機体指定データブロックの
                                            順に、0,1,2,･･･となります。
                               offset_xyz : 編隊長機に対する相対位置。
                                            左30m、高度2.5m、後ろ20mの位置を指
                                            定する場合は「-30.0 2.5 -20.0」とな
                                            ります。
                        待機 : {xyz}
                               xyz : 上空待機する時の基準位置。
                                     東20km、高度20000ft、西5kmの地点で待機させ
                                     るには、「20000.0m 20000ft 5000.0m」となり
                                     ます。
                                     ※ 20021205バージョンでは、ftを指定しても
                                        mで処理される場合がある様です。
                        着陸 : {rw_no} {direction}
                               rw_no     : 滑走路番号。
                               direction : アプローチの方角。
                               指定滑走路への着陸を指示する物ですが、パラメータ
                               は何を記述しても結果に影響無い様です。
                               手動で自動着陸を指示したときと同様、一番近い着陸
                               可能な滑走路が対象に選ばれる様です。
                               ※ パラメータを省略するとエラーとなります。
                        演舞 : 無し
                               ※ 多分、アクロバット飛行の為の物と思いますが、
                                  これを記述するとyfs読込時にエラーとなります。
                                  YSが内部で使用する為の物なのか、単にキーワー
                                  ドが在るだけなのか不明です。
                        *無* : 無し
                               20021205Bバージョン以前では、"何も操作されない"
                               キーワードだったんですが、現在はこれを指定すると
                               ひたすら垂直ループを繰り返す様です。
        
        ※ COM機を滑走路(又は空母)から発進させる場合、「FORMATIO」や「DOGFIGHT」
           「GOTOPOSI」の時はランディングギアをきちんと格納してくれますが、
           「GNDATACK」の時だけ(?)は脚が出っぱなしになってしまいます･･･。
           また、機体や指示の仕方によっては、尻餅をついて離陸できない場合も多々
           有ります。
    
    4.6) 攻撃対象指定
        攻撃目標機である事を指定します。
        指定したくない場合は、何も記述しません(省略する)。
        ※ V20020510及びそれ以前では指定しても何も変わりません。
           (ちゃんと機能するのかも知れませんが･･･未確認)
        
ARTARGET
        
        地上物の「PRTARGET指定」の航空機版と言ったところです。
        COM機が敵機(IFFの異なる機体)を攻撃する時の優先順位を付ける時に指定しま
        す。
        この指定のついた機体は、敵COM機から優先的(^^)に攻撃を受けます。
        ARTARGET指定つきの機体が居ればそれを優先的に攻撃し、ARTARGET指定の機体
        が無い(無くなった)場合は近くに居る物から順に攻撃してくれます。
        ただ、この指定の付いた機体が遠方(20mile以上?)に在る場合は、ARTARGET指定
        の無い機体でもより近い位置に居る物が攻撃対象になる様です。
        
    一機分の指定データは、大体次のような感じになります。(COM機の場合)

AIRPLANE F-104_STARFIGHTER FALSE
IDENTIFY 1
AIRPCMND POSITION -2000.00m 40000ft -22500.00m
AIRPCMND ATTITUDE -30deg 0deg 0deg
AIRPCMND INITSPED 0.6MACH
AIRPCMND CTLTHROT 1.0
AIRPCMND CTLLDGEA FALSE
AIRPCMND INITFUEL 12.5%
AIRPCMND INITIAAM 4
AIRPCMND INITIAGM 0
AIRPCMND INITRCKT 0
AIRPCMND INITBOMB 0
AIRPCMND SMOKEOIL 0.0kg
AIRPCMND WEAPONCH AAM
AIRPCMND AAMVISIB FALSE
INTENTIO
MINIALTI 50
DOGFIGHT G11.00 B20.00
ENDINTEN

    この例ではAIRPCMNDを多用していますが、これはもちろん、必要な時のみ使用すれ
    ば良いです。



5) 地上物指定部分
    追加配置する地上物の指定を記述します。
    一つの地上物の指定データブロックは、つぎの様な感じになります。
    
        [配置するオブジェクトの指定]
        [IFFの指定                 ]
        [配置位置の指定            ]
        [配置姿勢の指定            ]
        [武装他の初期値変更の指定  ]
        [攻撃対象指定              ]
        
    5.1) 配置するオブジェクトの指定
        オブジェクト名を指定します。
        オブジェクト指定データブロックの先頭行として識別されます。
        
GROUNDOB {obj_name}
        
        obj_name : 地上物の.datファイルに記述されている名前を指定します。
        
    5.2) IFFの指定
        機体のIFF指定と同様です。
        
IDENTIFY {iff}
        
        iff : 0〜3
        
    5.3) 配置位置の指定
        オブジェクトの位置を指定します。
        
GNDPOSIT {xyz}
        
        xyz : 配置する座標を、X,Y,Zの順で記述します。
              東5km、高度0m、北12kmの位置に配置するには、「5000.0m 0.0m 12000.0m」
              とします。
    
    5.4) 配置姿勢の指定
        オブジェクトの姿勢(向き)を指定します。
        
GNDATTIT {yaw_pitch_roll}
        
        yaw_pitch_roll : yaw角、pitch角、roll角の順に指定します。
                        東向きに配置するには、「-90.0deg 0.0deg 0.0deg」となり
                        ます。
    
    5.5) 武装他の初期値変更の指定
        機体の時と同様、地上物の.datファイルで指定されている各種の値を変更する
        事が出来ます。
        
GRNDCMND {key_word} <parameters>
        
        key_word   : 地上物の.datファイル中で使われているキーワード。
        parametars : そのキーワードに対するパラメータ。
        
        対空兵器の有無や装備数等を変更できますが、元々移動しない(CARRIER行を含まない)
        オブジェクトを移動可能にする事は出来ないようです。
        (この書式でCARRIER行を記述するとエラーになります)
    
    5.6) 攻撃対象指定
        対地攻撃目標である事を指定します。
        指定したくない場合は、何も記述しません(省略する)。
        
PRTARGET
        
        COM機が敵オブジェクト(IFFの異なるオブジェクト)を攻撃する時の優先順位を
        付ける時に指定します。
        この指定のついたオブジェクトは、敵COM機から優先的(^^)に攻撃を受けます。
        「InterceptMission」モードの時には、PRTARGET指定がついているオブジェク
        トが敵機の攻撃対象になりますが、それと同様に、PRTARGET指定つきオブジェ
        クトが在ればそれを優先的に攻撃し、PRTARGET指定のオブジェクトが無い(無く
        なった)場合は近くに在る物から順に攻撃してくれます。
    
    一つの地上物の配置指定データは、大体次のような感じになります。

GROUNDOB SAM
IDENTIFY 1
GNDPOSIT -500.00m 0.00m -6000.00m
GNDATTIT 0.00deg 0.00deg 0.00deg
GRNDCMND INITISAM 20



6) 天候データ指定部分
    風速と雲の設定を記述します。
    
    6.1) 風速
        「set wind」では、風速と風向きをダイアログで入力するようになっていますが、
        .yfsファイルで記述する場合は、方位角に従ってX軸方向とZ軸方向にベクトル
        を分解して記述しなくてはいけません。
        
WEATHERX
CONSTWIND {X}m/s {Y}m/s {Z}m/s
ENDWEATHER
        
        X,Y,Z : 各座標軸方向の風速。Y軸方向の値は指定しても無駄で、同じベクトル
                値でY==0として、XとZが再計算されます(多分)。
        
        この設定は、適当なマップで「Create new Flight」して「set wind」したあと、
        「Save flight」して、その保存yfsファイルからコピーしてきた方が楽でしょ
        う(^^)。

    6.2) 雲
        通常雲は自動生成させるのですが、雲を出したくない場合や、特定の形や色を
        した雲を出したい場合などにこの指定を記述します。

CLOUDCFG
0
        とだけ記述しておくと、雲は生成されません。
        
        雲定義のデータブロックは、以下の様になっています。
        
            [雲の総数]
            [雲データ1]
            [雲データ2]
                 ･
                 ･
                 ･
            [雲データn]
            
        そして「雲データ」は、
            [頂点数]
            [色(RGB)]
            [頂点1]
            [頂点2]
                 ･
                 ･
                 ･
            [頂点n]
        となっています。
        要は、雲ポリゴンの定義が羅列しているだけです。
        このデータは、構造上、.yfsファイルの末尾にないと不都合がでます(多分)。
        (別に末尾じゃなくても大丈夫だと思いますがこんなデータは一番最後に在った
         ほうがファイルを編集する時に都合がいいと思います)(^^)
        
CLOUDCFG
{num_clouds}
{num_vtx_1}
{color}
{vtx_1}
{vtx_2}
  ･
  ･
  ･
{vtx_n}
{num_vtx_2}
  ･
  ･
  ･
{num_vtx_n}
  ･
  ･
    ※ 頂点指定は、x,y,zの三次元座標値で単位はm(メートル)になります。



***** おまけ *****



○ 15分耐久時の「prevflight.dat」の中身

    1) Endulance Mode
ENDURANCE <player_airplane> <map_name> <num_wingman> <wingman_level> <use_missile> <unknown> 0 0 0 0
    player_airplane : プレイヤー機名
    map_name        : 使用するシーナリ名
    num_wingman     : 僚機の数
    wingman_level   : 僚機のレベル
                      0 == veteran、1 == ace、2 == top-ace
    use_missile     : 0 == 不使用、1 == 使用
    unknown         : (何かは不明･･･ミサイル数かも･･･
                       use_missileが1の時のみ値が設定される)

    2) Intercept Mission
INTERCEPT <player_airplane> <map_name> <num_wingman> <num_enemy> <allow_stealth_bomber> <allow_enemy_fighter> <allow_heavy_bomber> <allow_bomb> <unknown> 0 0 0 0
    player_airplane      : プレイヤー機名
    map_name             : 使用するシーナリ名
    num_wingman          : 僚機の数
    num_enemy            : 敵機の数
    allow_stealth_bomber : intercept mission設定ダイアログのチェックボックスに
    allow_enemy_fighter  : それぞれ対応
    allow_heavy_bomber   :         〃
    allow_bomb           :         〃
    unknown              : (･･･不明･･･)
    
    これを使って、「エンデュランス + 対地ミッション」･･･とか出来るかな･と思った
    のですが、見事、エラーになりました(笑)。
